export default function cdnPromise(url, variable) {
  if (document === undefined) {
    throw new Error('"document" is undefined');
  }
  if (url.match(/\.css$/)) {
    const head = document.getElementsByTagName('head')[0];
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = url;
    link.media = 'all';
    head.appendChild(link);
    return new Promise((resolve) => resolve());
  }
  if (variable && window.hasOwnProperty(variable)) {
    return new Promise((resolve) => resolve(window[variable]));
  }
  return new Promise((resolve, reject) => {
    const el = document.createElement('script');
    el.async = true;
    el.src = url;
    el.onerror = el.onload = (err) => {
      if (err && err.type === 'error') {
        el.remove();
        reject(err);
      }
      else if (variable) {
        resolve(window[variable]);
      }
      else {
        resolve();
      }
    };
    document.body.appendChild(el);
  });
}
